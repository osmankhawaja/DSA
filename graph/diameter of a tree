#include<bits/stdc++.h>
using namespace std;

const int N=1e3;
vector<int>g[N];
int depth[N];

void dfs(int vertex, int parent=-1)
{
    for(auto child : g[vertex])
    {
        if(child == parent) continue;
        depth[child] = depth[vertex]+1;
        dfs(child, vertex);
    }
}

int main()
{
    int v;
    cin>>v;
    for(int i=0; i<v-1; i++)
    {
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    dfs(1, 0);
    int mx_depth=-1;
    int mx_depth_node;
    for(int i=1; i<=v; i++)
    {
        if(mx_depth < depth[i])
        {
            mx_depth=depth[i];
            mx_depth_node=i;
        }
        depth[i]=0;
    }
    dfs(mx_depth_node);
    for(int i=1; i<=v; i++)
    {
        if(mx_depth < depth[i])
        {
            mx_depth=depth[i];
            mx_depth_node=i;
        }
    }
    cout<<mx_depth_node<<" "<<mx_depth;
    return 0;
}
