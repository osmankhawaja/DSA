#include<bits/stdc++.h>
using namespace std;

const int N=1e3;
vector<int>g[N];
int depth[N];
int height[N];

void dfs(int vertex, int parent)
{
    for(auto child : g[vertex])
    {
        if(child == parent) continue;

        depth[child] = depth[vertex]+1;
        dfs(child, vertex);
        height[vertex]=max(height[vertex], height[child]+1);

    }
}

int main()
{
    int v;
    cin>>v;
    for(int i=0; i<v-1; i++)
    {
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    dfs(1, 0);
    for(int i=1; i<=v; i++)
    {
       cout<<"node "<<i<<" depth: "<<depth[i]<<" height: "<<height[i]<<endl;
    }
        return 0;
}
