#include<bits/stdc++.h>
using namespace std;
const int N=1e3;

vector<int>g[N];
bool vis[N];
bool path[N];

bool dfs(int vertex)
{
    vis[vertex]=true;
    path[vertex]=true;
    for(auto child:g[vertex])
    {
        if(!vis[child])
        {
            if(dfs(child))
             return true;
        }
        else if(path[child])
         return true;
    }
    path[vertex]=false;
    return false;
}

int main()
{
    int v,e;
    cin>>v>>e;
    for(int i=0; i<e; i++)
    {
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
    }
    for(int i=0; i<v; i++)
    {
        if(!vis[i])
        {
            if(dfs(i)){
              cout<<"cycle exist";
              return 0;
            }
        }
    }
    cout<<"cycle not exist";
}
